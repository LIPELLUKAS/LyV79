
services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:5433"
    restart: always

  redis:
    image: redis:7
    ports:
      - "6380:6380"
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    ports:
      - "8001:8000"
    restart: always
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             gunicorn luz_y_verdad.wsgi:application --bind 0.0.0.0:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./.env
    ports:
      - "3001:3000"
    depends_on:
      - backend
    restart: always

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A luz_y_verdad worker -l info
    volumes:
      - ./backend:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - backend
    restart: always

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A luz_y_verdad beat -l info
    volumes:
      - ./backend:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - backend
      - celery
    restart: always

  nginx:
    image: nginx:1.23
    ports:
      - "81:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/var/www/staticfiles
      - media_volume:/var/www/media
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
