# Generated by Django 5.2 on 2025-04-28 02:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='título')),
                ('description', models.TextField(blank=True, verbose_name='descripción')),
                ('document_type', models.CharField(choices=[('book', 'Libro'), ('article', 'Artículo'), ('lecture', 'Plancha'), ('ritual', 'Ritual'), ('constitution', 'Constitución'), ('regulation', 'Reglamento'), ('history', 'Historia'), ('symbolism', 'Simbolismo'), ('other', 'Otro')], default='other', max_length=20, verbose_name='tipo de documento')),
                ('file', models.FileField(upload_to='library_documents/', verbose_name='archivo')),
                ('author', models.CharField(blank=True, max_length=200, verbose_name='autor')),
                ('publication_date', models.DateField(blank=True, null=True, verbose_name='fecha de publicación')),
                ('language', models.CharField(blank=True, max_length=50, verbose_name='idioma')),
                ('pages', models.PositiveIntegerField(blank=True, null=True, verbose_name='páginas')),
                ('required_degree', models.PositiveSmallIntegerField(choices=[(1, 'Aprendiz'), (2, 'Compañero'), (3, 'Maestro')], default=1, verbose_name='grado requerido')),
                ('tags', models.CharField(blank=True, help_text='Separadas por comas', max_length=500, verbose_name='etiquetas')),
                ('is_public', models.BooleanField(default=False, help_text='Visible para todos los miembros con grado suficiente', verbose_name='es público')),
                ('is_featured', models.BooleanField(default=False, verbose_name='destacado')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='número de vistas')),
                ('download_count', models.PositiveIntegerField(default=0, verbose_name='número de descargas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='fecha de actualización')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='library_documents', to=settings.AUTH_USER_MODEL, verbose_name='subido por')),
            ],
            options={
                'verbose_name': 'documento',
                'verbose_name_plural': 'documentos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(choices=[('view', 'Visualización'), ('download', 'Descarga')], max_length=10, verbose_name='tipo de acceso')),
                ('access_date', models.DateTimeField(auto_now_add=True, verbose_name='fecha de acceso')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='dirección IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='agente de usuario')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesses', to='library.document', verbose_name='documento')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_accesses', to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
            options={
                'verbose_name': 'acceso a documento',
                'verbose_name_plural': 'accesos a documentos',
                'ordering': ['-access_date'],
            },
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('description', models.TextField(blank=True, verbose_name='descripción')),
                ('required_degree', models.PositiveSmallIntegerField(choices=[(1, 'Aprendiz'), (2, 'Compañero'), (3, 'Maestro')], default=1, verbose_name='grado requerido')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='orden')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='fecha de actualización')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_categories', to=settings.AUTH_USER_MODEL, verbose_name='creada por')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='library.documentcategory', verbose_name='categoría padre')),
            ],
            options={
                'verbose_name': 'categoría de documentos',
                'verbose_name_plural': 'categorías de documentos',
                'ordering': ['order', 'name'],
                'unique_together': {('name', 'parent')},
            },
        ),
        migrations.AddField(
            model_name='document',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='library.documentcategory', verbose_name='categoría'),
        ),
        migrations.CreateModel(
            name='DocumentComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='contenido')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='fecha de actualización')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='library.document', verbose_name='documento')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_comments', to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
            options={
                'verbose_name': 'comentario de documento',
                'verbose_name_plural': 'comentarios de documentos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '★'), (2, '★★'), (3, '★★★'), (4, '★★★★'), (5, '★★★★★')], verbose_name='calificación')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='fecha de actualización')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='library.document', verbose_name='documento')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_ratings', to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
            options={
                'verbose_name': 'calificación de documento',
                'verbose_name_plural': 'calificaciones de documentos',
                'unique_together': {('document', 'user')},
            },
        ),
    ]
